[gd_scene load_steps=16 format=3 uid="uid://c44wxreagor6o"]

[ext_resource type="Script" path="res://scripts/Level/FirstLevel.gd" id="1_mg7fv"]
[ext_resource type="PackedScene" uid="uid://c73cg3qe6bac" path="res://scenes/vagabond.tscn" id="2_ehgig"]
[ext_resource type="Texture2D" uid="uid://cmjr4s3g62tb5" path="res://assets/tiles/tilesheet.png" id="3_jwo46"]
[ext_resource type="Script" path="res://scripts/Utility/Pathfinder.gd" id="5_1s3py"]
[ext_resource type="PackedScene" uid="uid://36ugvay7s7hj" path="res://scenes/Entities/Hound/Hound.tscn" id="5_adc8o"]
[ext_resource type="PackedScene" uid="uid://crcl3jpvgld3m" path="res://scenes/Levels/Interactables/FirstLevelDoor.tscn" id="6_if2hv"]
[ext_resource type="Texture2D" uid="uid://mb20fspqc8qm" path="res://assets/backgrounds/Nightcity.png" id="7_y5pi7"]

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_11gba"]
texture = ExtResource("3_jwo46")
1:0/0 = 0
1:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:0/0/physics_layer_0/angular_velocity = 0.0
2:0/0 = 0
2:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:0/0/physics_layer_0/angular_velocity = 0.0
3:0/0 = 0
3:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:0/0/physics_layer_0/angular_velocity = 0.0
4:0/0 = 0
4:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:0/0/physics_layer_0/angular_velocity = 0.0
5:0/0 = 0
5:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:0/0/physics_layer_0/angular_velocity = 0.0
7:0/0 = 0
7:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:0/0/physics_layer_0/angular_velocity = 0.0
8:0/0 = 0
8:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:0/0/physics_layer_0/angular_velocity = 0.0
9:0/0 = 0
9:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:0/0/physics_layer_0/angular_velocity = 0.0
11:0/0 = 0
11:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:0/0/physics_layer_0/angular_velocity = 0.0
12:0/0 = 0
12:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:0/0/physics_layer_0/angular_velocity = 0.0
13:0/0 = 0
13:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:0/0/physics_layer_0/angular_velocity = 0.0
0:1/0 = 0
0:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:1/0/physics_layer_0/angular_velocity = 0.0
1:1/0 = 0
1:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:1/0/physics_layer_0/angular_velocity = 0.0
1:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:1/0 = 0
2:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:1/0/physics_layer_0/angular_velocity = 0.0
2:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:1/0 = 0
3:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:1/0/physics_layer_0/angular_velocity = 0.0
3:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:1/0 = 0
4:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:1/0/physics_layer_0/angular_velocity = 0.0
4:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:1/0 = 0
5:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:1/0/physics_layer_0/angular_velocity = 0.0
5:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:1/0 = 0
6:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:1/0/physics_layer_0/angular_velocity = 0.0
7:1/0 = 0
7:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:1/0/physics_layer_0/angular_velocity = 0.0
8:1/0 = 0
8:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:1/0/physics_layer_0/angular_velocity = 0.0
9:1/0 = 0
9:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:1/0/physics_layer_0/angular_velocity = 0.0
10:1/0 = 0
10:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:1/0/physics_layer_0/angular_velocity = 0.0
11:1/0 = 0
11:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:1/0/physics_layer_0/angular_velocity = 0.0
12:1/0 = 0
12:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:1/0/physics_layer_0/angular_velocity = 0.0
13:1/0 = 0
13:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:1/0/physics_layer_0/angular_velocity = 0.0
0:2/0 = 0
0:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:2/0/physics_layer_0/angular_velocity = 0.0
1:2/0 = 0
1:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:2/0/physics_layer_0/angular_velocity = 0.0
1:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:2/0 = 0
2:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:2/0/physics_layer_0/angular_velocity = 0.0
3:2/0 = 0
3:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:2/0/physics_layer_0/angular_velocity = 0.0
4:2/0 = 0
4:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:2/0/physics_layer_0/angular_velocity = 0.0
5:2/0 = 0
5:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:2/0/physics_layer_0/angular_velocity = 0.0
5:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:2/0 = 0
6:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:2/0/physics_layer_0/angular_velocity = 0.0
7:2/0 = 0
7:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:2/0/physics_layer_0/angular_velocity = 0.0
8:2/0 = 0
8:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:2/0/physics_layer_0/angular_velocity = 0.0
9:2/0 = 0
9:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:2/0/physics_layer_0/angular_velocity = 0.0
10:2/0 = 0
10:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:2/0/physics_layer_0/angular_velocity = 0.0
11:2/0 = 0
11:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:2/0/physics_layer_0/angular_velocity = 0.0
12:2/0 = 0
12:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:2/0/physics_layer_0/angular_velocity = 0.0
13:2/0 = 0
13:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:2/0/physics_layer_0/angular_velocity = 0.0
0:3/0 = 0
0:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:3/0/physics_layer_0/angular_velocity = 0.0
1:3/0 = 0
1:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:3/0/physics_layer_0/angular_velocity = 0.0
1:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
2:3/0 = 0
2:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:3/0/physics_layer_0/angular_velocity = 0.0
2:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
3:3/0 = 0
3:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:3/0/physics_layer_0/angular_velocity = 0.0
3:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:3/0 = 0
4:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:3/0/physics_layer_0/angular_velocity = 0.0
4:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
5:3/0 = 0
5:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:3/0/physics_layer_0/angular_velocity = 0.0
5:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
6:3/0 = 0
6:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:3/0/physics_layer_0/angular_velocity = 0.0
7:3/0 = 0
7:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:3/0/physics_layer_0/angular_velocity = 0.0
8:3/0 = 0
8:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:3/0/physics_layer_0/angular_velocity = 0.0
9:3/0 = 0
9:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:3/0/physics_layer_0/angular_velocity = 0.0
10:3/0 = 0
10:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:3/0/physics_layer_0/angular_velocity = 0.0
11:3/0 = 0
11:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:3/0/physics_layer_0/angular_velocity = 0.0
12:3/0 = 0
12:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:3/0/physics_layer_0/angular_velocity = 0.0
13:3/0 = 0
13:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:3/0/physics_layer_0/angular_velocity = 0.0
1:4/0 = 0
1:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:4/0/physics_layer_0/angular_velocity = 0.0
2:4/0 = 0
2:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:4/0/physics_layer_0/angular_velocity = 0.0
3:4/0 = 0
3:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:4/0/physics_layer_0/angular_velocity = 0.0
4:4/0 = 0
4:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:4/0/physics_layer_0/angular_velocity = 0.0
5:4/0 = 0
5:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:4/0/physics_layer_0/angular_velocity = 0.0
6:4/0 = 0
6:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:4/0/physics_layer_0/angular_velocity = 0.0
7:4/0 = 0
7:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:4/0/physics_layer_0/angular_velocity = 0.0
8:4/0 = 0
8:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:4/0/physics_layer_0/angular_velocity = 0.0
9:4/0 = 0
9:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:4/0/physics_layer_0/angular_velocity = 0.0
10:4/0 = 0
10:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:4/0/physics_layer_0/angular_velocity = 0.0
11:4/0 = 0
11:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:4/0/physics_layer_0/angular_velocity = 0.0
12:4/0 = 0
12:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:4/0/physics_layer_0/angular_velocity = 0.0
5:5/0 = 0
5:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:5/0/physics_layer_0/angular_velocity = 0.0
6:5/0 = 0
6:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:5/0/physics_layer_0/angular_velocity = 0.0
7:5/0 = 0
7:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:5/0/physics_layer_0/angular_velocity = 0.0
8:5/0 = 0
8:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:5/0/physics_layer_0/angular_velocity = 0.0
9:5/0 = 0
9:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:5/0/physics_layer_0/angular_velocity = 0.0
10:5/0 = 0
10:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:5/0/physics_layer_0/angular_velocity = 0.0
11:5/0 = 0
11:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:5/0/physics_layer_0/angular_velocity = 0.0
12:5/0 = 0
12:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:5/0/physics_layer_0/angular_velocity = 0.0
2:6/0 = 0
2:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:6/0/physics_layer_0/angular_velocity = 0.0
3:6/0 = 0
3:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:6/0/physics_layer_0/angular_velocity = 0.0
4:6/0 = 0
4:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:6/0/physics_layer_0/angular_velocity = 0.0
5:6/0 = 0
5:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:6/0/physics_layer_0/angular_velocity = 0.0
7:6/0 = 0
7:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:6/0/physics_layer_0/angular_velocity = 0.0
8:6/0 = 0
8:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:6/0/physics_layer_0/angular_velocity = 0.0
9:6/0 = 0
9:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:6/0/physics_layer_0/angular_velocity = 0.0
11:6/0 = 0
11:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:6/0/physics_layer_0/angular_velocity = 0.0
1:7/0 = 0
1:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:7/0/physics_layer_0/angular_velocity = 0.0
7:7/0 = 0
7:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:7/0/physics_layer_0/angular_velocity = 0.0
11:7/0 = 0
11:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:7/0/physics_layer_0/angular_velocity = 0.0
1:8/0 = 0
1:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:8/0/physics_layer_0/angular_velocity = 0.0
2:8/0 = 0
2:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:8/0/physics_layer_0/angular_velocity = 0.0
3:8/0 = 0
3:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:8/0/physics_layer_0/angular_velocity = 0.0
5:8/0 = 0
5:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:8/0/physics_layer_0/angular_velocity = 0.0
7:8/0 = 0
7:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:8/0/physics_layer_0/angular_velocity = 0.0
8:8/0 = 0
8:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:8/0/physics_layer_0/angular_velocity = 0.0
9:8/0 = 0
9:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:8/0/physics_layer_0/angular_velocity = 0.0
11:8/0 = 0
11:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:8/0/physics_layer_0/angular_velocity = 0.0
1:9/0 = 0
1:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:9/0/physics_layer_0/angular_velocity = 0.0
2:9/0 = 0
2:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:9/0/physics_layer_0/angular_velocity = 0.0
3:9/0 = 0
3:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:9/0/physics_layer_0/angular_velocity = 0.0
4:9/0 = 0
4:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:9/0/physics_layer_0/angular_velocity = 0.0
5:9/0 = 0
5:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:9/0/physics_layer_0/angular_velocity = 0.0
6:9/0 = 0
6:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:9/0/physics_layer_0/angular_velocity = 0.0
7:9/0 = 0
7:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:9/0/physics_layer_0/angular_velocity = 0.0
8:9/0 = 0
8:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:9/0/physics_layer_0/angular_velocity = 0.0
9:9/0 = 0
9:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:9/0/physics_layer_0/angular_velocity = 0.0
10:9/0 = 0
10:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:9/0/physics_layer_0/angular_velocity = 0.0
11:9/0 = 0
11:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:9/0/physics_layer_0/angular_velocity = 0.0

[sub_resource type="TileSet" id="TileSet_8twec"]
physics_layer_0/collision_layer = 147
physics_layer_0/collision_mask = 17
sources/0 = SubResource("TileSetAtlasSource_11gba")

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_he0we"]
parameter_name = "FillColor"
default_value_enabled = true
default_value = Color(1, 1, 1, 0)

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_s8rjs"]
parameter_name = "Amount"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_i8exa"]
input_name = "color"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_5bipv"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(1, 1, 1, 1), 2, Quaternion(0.5, 0.5, 0.5, 0.5)]
op_type = 5

[sub_resource type="VisualShader" id="VisualShader_3lafa"]
resource_local_to_scene = true
code = "shader_type canvas_item;
render_mode blend_mix;

uniform vec4 FillColor : source_color = vec4(1.000000, 1.000000, 1.000000, 0.000000);
uniform float Amount;



void fragment() {
// Input:7
	vec4 n_out7p0 = COLOR;


// ColorParameter:2
	vec4 n_out2p0 = FillColor;


// FloatParameter:6
	float n_out6p0 = Amount;


// Mix:8
	vec4 n_out8p0 = mix(n_out7p0, n_out2p0, vec4(n_out6p0));


// Output:0
	COLOR.rgb = vec3(n_out8p0.xyz);


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(960, 140)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_he0we")
nodes/fragment/2/position = Vector2(40, 340)
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatParameter_s8rjs")
nodes/fragment/6/position = Vector2(40, 120)
nodes/fragment/7/node = SubResource("VisualShaderNodeInput_i8exa")
nodes/fragment/7/position = Vector2(20, -40)
nodes/fragment/8/node = SubResource("VisualShaderNodeMix_5bipv")
nodes/fragment/8/position = Vector2(700, 20)
nodes/fragment/connections = PackedInt32Array(6, 0, 8, 2, 7, 0, 8, 0, 2, 0, 8, 1, 8, 0, 0, 0)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_hapga"]
resource_local_to_scene = true
shader = SubResource("VisualShader_3lafa")
shader_parameter/FillColor = Color(1, 1, 1, 0)
shader_parameter/Amount = null

[node name="FirstLevel" type="Node2D"]
script = ExtResource("1_mg7fv")
stopwatch_enabled = false
camera_limit_left = 0

[node name="Player" parent="." instance=ExtResource("2_ehgig")]
position = Vector2(174, 167)

[node name="TileMap" type="TileMap" parent="."]
texture_filter = 1
tile_set = SubResource("TileSet_8twec")
format = 2
layer_0/name = "MidCollisionLayer"
layer_0/tile_data = PackedInt32Array(851973, 131072, 1, 851974, 131072, 1, 851975, 131072, 1, 851976, 131072, 1, 851977, 131072, 1, 851978, 131072, 1, 851979, 131072, 1, 851980, 131072, 1, 851981, 131072, 1, 851982, 131072, 1, 851983, 131072, 1, 851984, 131072, 1, 851985, 131072, 1, 851986, 196608, 1, 851987, 131072, 1, 851988, 131072, 1, 851989, 131072, 1, 851990, 131072, 1, 851991, 262144, 1, 851992, 131072, 1, 327708, 65536, 3, 327709, 262144, 3, 327710, 262144, 3, 786462, 65536, 1, 327711, 262144, 3, 786463, 131072, 1, 327712, 262144, 3, 786464, 131072, 1, 327713, 262144, 3, 786465, 131072, 1, 327714, 262144, 3, 786466, 131072, 1, 327715, 262144, 3, 786467, 131072, 1, 851993, 131072, 1, 851994, 131072, 1, 851995, 131072, 1, 851996, 131072, 1, 851997, 131072, 1, 327716, 262144, 3, 786468, 131072, 1, 327717, 262144, 3, 786469, 131072, 1, 327718, 262144, 3, 786470, 131072, 1, 327719, 262144, 3, 786471, 131072, 1, 327720, 262144, 3, 786472, 131072, 1, 393257, 65536, 2, 458793, 65536, 2, 524329, 65536, 2, 589865, 65536, 2, 655401, 65536, 2, 720937, 65536, 2, 786436, 327680, 1, 786434, 262144, 1, 786435, 196608, 1, 720897, 327680, 1, 655360, 327680, 2, 589824, 327680, 2, 524288, 327680, 2, 458752, 327680, 2, 393216, 327680, 2, 262144, 327680, 2, 196608, 327680, 2, 327680, 327680, 2, 917509, 131072, 2, 983045, 131072, 2, 1048581, 131072, 2, 1114117, 131072, 2, 917510, 131072, 2, 983046, 131072, 2, 1048582, 131072, 2, 1114118, 131072, 2, 917511, 131072, 2, 983047, 131072, 2, 1048583, 131072, 2, 1114119, 131072, 2, 917512, 131072, 2, 983048, 131072, 2, 1048584, 131072, 2, 1114120, 131072, 2, 917513, 131072, 2, 983049, 131072, 2, 1048585, 131072, 2, 1114121, 131072, 2, 917514, 131072, 2, 983050, 131072, 2, 1048586, 131072, 2, 1114122, 131072, 2, 917515, 131072, 2, 983051, 131072, 2, 1048587, 131072, 2, 1114123, 131072, 2, 917516, 131072, 2, 983052, 131072, 2, 1048588, 131072, 2, 1114124, 131072, 2, 917517, 131072, 2, 983053, 131072, 2, 1048589, 131072, 2, 1114125, 131072, 2, 917518, 131072, 2, 983054, 131072, 2, 1048590, 131072, 2, 1114126, 131072, 2, 917519, 131072, 2, 983055, 131072, 2, 1048591, 131072, 2, 1114127, 131072, 2, 917520, 131072, 2, 983056, 131072, 2, 1048592, 131072, 2, 1114128, 131072, 2, 917521, 131072, 2, 983057, 131072, 2, 1048593, 131072, 2, 1114129, 131072, 2, 917522, 131072, 2, 983058, 131072, 2, 1048594, 131072, 2, 1114130, 131072, 2, 917523, 131072, 2, 983059, 131072, 2, 1048595, 131072, 2, 1114131, 131072, 2, 917524, 131072, 2, 983060, 131072, 2, 1048596, 131072, 2, 1114132, 131072, 2, 917525, 131072, 2, 983061, 131072, 2, 1048597, 131072, 2, 1114133, 131072, 2, 917526, 131072, 2, 983062, 131072, 2, 1048598, 131072, 2, 1114134, 131072, 2, 917527, 131072, 2, 983063, 131072, 2, 1048599, 131072, 2, 1114135, 131072, 2, 917528, 131072, 2, 983064, 131072, 2, 1048600, 131072, 2, 1114136, 131072, 2, 917529, 131072, 2, 983065, 131072, 2, 1048601, 131072, 2, 1114137, 131072, 2, 917530, 131072, 2, 983066, 131072, 2, 1048602, 131072, 2, 1114138, 131072, 2, 917531, 131072, 2, 983067, 131072, 2, 1048603, 131072, 2, 1114139, 131072, 2, 917532, 131072, 2, 983068, 131072, 2, 1048604, 131072, 2, 1114140, 131072, 2, 917533, 131072, 2, 983069, 131072, 2, 1048605, 131072, 2, 1114141, 131072, 2, 917534, 131072, 2, 983070, 131072, 2, 1048606, 131072, 2, 1114142, 131072, 2, 917535, 131072, 2, 983071, 131072, 2, 1048607, 131072, 2, 1114143, 131072, 2, 917536, 131072, 2, 983072, 131072, 2, 1048608, 131072, 2, 1114144, 131072, 2, 917537, 131072, 2, 983073, 131072, 2, 1048609, 131072, 2, 1114145, 131072, 2, 917538, 131072, 2, 983074, 131072, 2, 1048610, 131072, 2, 1114146, 131072, 2, 917539, 131072, 2, 983075, 131072, 2, 1048611, 131072, 2, 1114147, 131072, 2, 917540, 131072, 2, 983076, 131072, 2, 1048612, 131072, 2, 1114148, 131072, 2, 917541, 131072, 2, 983077, 131072, 2, 1048613, 131072, 2, 1114149, 131072, 2, 851998, 131072, 2, 851999, 131072, 2, 852000, 131072, 2, 852001, 131072, 2, 852002, 131072, 2, 852003, 131072, 2, 852004, 131072, 2, 852005, 131072, 2, 851970, 131072, 2, 917506, 131072, 2, 983042, 131072, 2, 1048578, 131072, 2, 1114114, 131072, 2, 851971, 131072, 2, 917507, 131072, 2, 983043, 131072, 2, 1048579, 131072, 2, 1114115, 131072, 2, 851972, 131072, 2, 917508, 131072, 2, 983044, 131072, 2, 1048580, 131072, 2, 1114116, 131072, 2, 720896, 131072, 2, 786432, 131072, 2, 851968, 131072, 2, 917504, 131072, 2, 983040, 131072, 2, 1048576, 131072, 2, 1114112, 131072, 2, 1179648, 131072, 2, 786433, 131072, 2, 851969, 131072, 2, 917505, 131072, 2, 983041, 131072, 2, 1048577, 131072, 2, 1114113, 131072, 2, 1179649, 131072, 2, 1245184, 131072, 2, 1310720, 131072, 2, 1376256, 131072, 2, 1441792, 131072, 2, 1245185, 131072, 2, 1310721, 131072, 2, 1376257, 131072, 2, 1441793, 131072, 2, 1179650, 131072, 2, 1245186, 131072, 2, 1310722, 131072, 2, 1376258, 131072, 2, 1441794, 131072, 2, 1179651, 131072, 2, 1245187, 131072, 2, 1310723, 131072, 2, 1376259, 131072, 2, 1441795, 131072, 2, 1179652, 131072, 2, 1245188, 131072, 2, 1310724, 131072, 2, 1376260, 131072, 2, 1441796, 131072, 2, 1179653, 131072, 2, 1245189, 131072, 2, 1310725, 131072, 2, 1376261, 131072, 2, 1441797, 131072, 2, 1179654, 131072, 2, 1245190, 131072, 2, 1310726, 131072, 2, 1376262, 131072, 2, 1441798, 131072, 2, 1179655, 131072, 2, 1245191, 131072, 2, 1310727, 131072, 2, 1376263, 131072, 2, 1441799, 131072, 2, 1179656, 131072, 2, 1245192, 131072, 2, 1310728, 131072, 2, 1376264, 131072, 2, 1441800, 131072, 2, 1179657, 131072, 2, 1245193, 131072, 2, 1310729, 131072, 2, 1376265, 131072, 2, 1441801, 131072, 2, 1179658, 131072, 2, 1245194, 131072, 2, 1310730, 131072, 2, 1376266, 131072, 2, 1441802, 131072, 2, 1179659, 131072, 2, 1245195, 131072, 2, 1310731, 131072, 2, 1376267, 131072, 2, 1441803, 131072, 2, 1179660, 131072, 2, 1245196, 131072, 2, 1310732, 131072, 2, 1376268, 131072, 2, 1441804, 131072, 2, 1179661, 131072, 2, 1245197, 131072, 2, 1310733, 131072, 2, 1376269, 131072, 2, 1441805, 131072, 2, 1179662, 131072, 2, 1245198, 131072, 2, 1310734, 131072, 2, 1376270, 131072, 2, 1441806, 131072, 2, 1179663, 131072, 2, 1245199, 131072, 2, 1310735, 131072, 2, 1376271, 131072, 2, 1441807, 131072, 2, 1179664, 131072, 2, 1245200, 131072, 2, 1310736, 131072, 2, 1376272, 131072, 2, 1441808, 131072, 2, 1179665, 131072, 2, 1245201, 131072, 2, 1310737, 131072, 2, 1376273, 131072, 2, 1441809, 131072, 2, 1179666, 131072, 2, 1245202, 131072, 2, 1310738, 131072, 2, 1376274, 131072, 2, 1441810, 131072, 2, 1179667, 131072, 2, 1245203, 131072, 2, 1310739, 131072, 2, 1376275, 131072, 2, 1441811, 131072, 2, 1179668, 131072, 2, 1245204, 131072, 2, 1310740, 131072, 2, 1376276, 131072, 2, 1441812, 131072, 2, 1179669, 131072, 2, 1245205, 131072, 2, 1310741, 131072, 2, 1376277, 131072, 2, 1441813, 131072, 2, 1179670, 131072, 2, 1245206, 131072, 2, 1310742, 131072, 2, 1376278, 131072, 2, 1441814, 131072, 2, 1179671, 131072, 2, 1245207, 131072, 2, 1310743, 131072, 2, 1376279, 131072, 2, 1441815, 131072, 2, 1179672, 131072, 2, 1245208, 131072, 2, 1310744, 131072, 2, 1376280, 131072, 2, 1441816, 131072, 2, 1179673, 131072, 2, 1245209, 131072, 2, 1310745, 131072, 2, 1376281, 131072, 2, 1441817, 131072, 2, 1179674, 131072, 2, 1245210, 131072, 2, 1310746, 131072, 2, 1376282, 131072, 2, 1441818, 131072, 2, 1179675, 131072, 2, 1245211, 131072, 2, 1310747, 131072, 2, 1376283, 131072, 2, 1441819, 131072, 2, 1179676, 131072, 2, 1245212, 131072, 2, 1310748, 131072, 2, 1376284, 131072, 2, 1441820, 131072, 2, 1179677, 131072, 2, 1245213, 131072, 2, 1310749, 131072, 2, 1376285, 131072, 2, 1441821, 131072, 2, 1179678, 131072, 2, 1245214, 131072, 2, 1310750, 131072, 2, 1376286, 131072, 2, 1441822, 131072, 2, 1179679, 131072, 2, 1245215, 131072, 2, 1310751, 131072, 2, 1376287, 131072, 2, 1441823, 131072, 2, 1179680, 131072, 2, 1245216, 131072, 2, 1310752, 131072, 2, 1376288, 131072, 2, 1441824, 131072, 2, 1179681, 131072, 2, 1245217, 131072, 2, 1310753, 131072, 2, 1376289, 131072, 2, 1441825, 131072, 2, 1179682, 131072, 2, 1245218, 131072, 2, 1310754, 131072, 2, 1376290, 131072, 2, 1441826, 131072, 2, 1179683, 131072, 2, 1245219, 131072, 2, 1310755, 131072, 2, 1376291, 131072, 2, 1441827, 131072, 2, 1179684, 131072, 2, 1245220, 131072, 2, 1310756, 131072, 2, 1376292, 131072, 2, 1441828, 131072, 2, 1179685, 131072, 2, 1245221, 131072, 2, 1310757, 131072, 2, 1376293, 131072, 2, 1441829, 131072, 2, 1114150, 131072, 2, 1179686, 131072, 2, 1245222, 131072, 2, 1310758, 131072, 2, 1376294, 131072, 2, 1441830, 131072, 2, 1114151, 131072, 2, 1179687, 131072, 2, 1245223, 131072, 2, 1310759, 131072, 2, 1376295, 131072, 2, 1441831, 131072, 2, 1114152, 131072, 2, 1179688, 131072, 2, 1245224, 131072, 2, 1310760, 131072, 2, 1376296, 131072, 2, 1441832, 131072, 2, 1114153, 131072, 2, 1179689, 131072, 2, 1245225, 131072, 2, 1310761, 131072, 2, 1376297, 131072, 2, 1441833, 131072, 2, 852006, 131072, 2, 917542, 131072, 2, 983078, 131072, 2, 1048614, 131072, 2, 852007, 131072, 2, 917543, 131072, 2, 983079, 131072, 2, 1048615, 131072, 2, 852008, 131072, 2, 917544, 131072, 2, 983080, 131072, 2, 1048616, 131072, 2, 852009, 131072, 2, 917545, 131072, 2, 983081, 131072, 2, 1048617, 131072, 2, 786473, 131072, 2, 786474, 131072, 2, 852010, 131072, 2, 917546, 131072, 2, 983082, 131072, 2, 1048618, 131072, 2, 1114154, 131072, 2, 1179690, 131072, 2, 1245226, 131072, 2, 1310762, 131072, 2, 1376298, 131072, 2, 1441834, 131072, 2, 786475, 131072, 2, 852011, 131072, 2, 917547, 131072, 2, 983083, 131072, 2, 1048619, 131072, 2, 1114155, 131072, 2, 1179691, 131072, 2, 1245227, 131072, 2, 1310763, 131072, 2, 1376299, 131072, 2, 1441835, 131072, 2, 786476, 131072, 2, 852012, 131072, 2, 917548, 131072, 2, 983084, 131072, 2, 1048620, 131072, 2, 1114156, 131072, 2, 1179692, 131072, 2, 1245228, 131072, 2, 1310764, 131072, 2, 1376300, 131072, 2, 1441836, 131072, 2, 786477, 131072, 2, 852013, 131072, 2, 917549, 131072, 2, 983085, 131072, 2, 1048621, 131072, 2, 1114157, 131072, 2, 1179693, 131072, 2, 1245229, 131072, 2, 1310765, 131072, 2, 1376301, 131072, 2, 1441837, 131072, 2, 786478, 196608, 2, 852014, 196608, 2, 917550, 196608, 2, 983086, 196608, 2, 1048622, 196608, 2, 1114158, 196608, 2, 1179694, 196608, 2, 1245230, 196608, 2, 1310766, 196608, 2, 1376302, 196608, 2, 1441838, 196608, 2, 1441839, 196608, 2, 262186, 196608, 2, 327722, 131072, 2, 393258, 131072, 2, 458794, 131072, 2, 524330, 131072, 2, 589866, 131072, 2, 655402, 131072, 2, 720938, 131072, 2, 262187, 196608, 2, 327723, 196608, 2, 393259, 196608, 2, 458795, 131072, 2, 524331, 131072, 2, 589867, 131072, 2, 655403, 131072, 2, 720939, 131072, 2, 262188, 196608, 2, 327724, 196608, 2, 393260, 196608, 2, 458796, 131072, 2, 524332, 131072, 2, 589868, 131072, 2, 655404, 131072, 2, 720940, 131072, 2, 262189, 196608, 2, 327725, 196608, 2, 393261, 196608, 2, 458797, 131072, 2, 524333, 131072, 2, 589869, 131072, 2, 655405, 131072, 2, 720941, 131072, 2, 262190, 196608, 2, 327726, 196608, 2, 393262, 196608, 2, 458798, 196608, 2, 524334, 196608, 2, 589870, 196608, 2, 655406, 196608, 2, 720942, 196608, 2, 327721, 131072, 2, -65505, 196608, 2, 31, 196608, 2, 65567, 196608, 2, 131103, 196608, 2, 196639, 196608, 2, 262175, 196608, 2, -65504, 196608, 2, 32, 196608, 2, 65568, 196608, 2, 131104, 196608, 2, 196640, 196608, 2, 262176, 196608, 2, -65503, 196608, 2, 33, 196608, 2, 65569, 196608, 2, 131105, 196608, 2, 196641, 196608, 2, 262177, 196608, 2, -65502, 196608, 2, 34, 196608, 2, 65570, 196608, 2, 131106, 196608, 2, 196642, 196608, 2, 262178, 196608, 2, -65501, 196608, 2, 35, 196608, 2, 65571, 196608, 2, 131107, 196608, 2, 196643, 196608, 2, 262179, 196608, 2, -65500, 196608, 2, 36, 196608, 2, 65572, 196608, 2, 131108, 196608, 2, 196644, 196608, 2, 262180, 196608, 2, -65499, 196608, 2, 37, 196608, 2, 65573, 196608, 2, 131109, 196608, 2, 196645, 196608, 2, 262181, 196608, 2, -65498, 196608, 2, 38, 196608, 2, 65574, 196608, 2, 131110, 196608, 2, 196646, 196608, 2, 262182, 196608, 2, -65497, 196608, 2, 39, 196608, 2, 65575, 196608, 2, 131111, 196608, 2, 196647, 196608, 2, 262183, 196608, 2, -65496, 196608, 2, 40, 196608, 2, 65576, 196608, 2, 131112, 196608, 2, 196648, 196608, 2, 262184, 196608, 2, -65495, 196608, 2, 41, 196608, 2, 65577, 196608, 2, 131113, 196608, 2, 196649, 196608, 2, 262185, 196608, 2, 42, 196608, 2, 65578, 196608, 2, 131114, 196608, 2, 196650, 196608, 2, 43, 196608, 2, 65579, 196608, 2, 131115, 196608, 2, 196651, 196608, 2, 44, 196608, 2, 65580, 196608, 2, 131116, 196608, 2, 196652, 196608, 2, 45, 196608, 2, 65581, 196608, 2, 131117, 196608, 2, 196653, 196608, 2, 46, 196608, 2, 65582, 196608, 2, 131118, 196608, 2, 196654, 196608, 2, 47, 196608, 2, 65583, 196608, 2, 131119, 196608, 2, -131044, 65536, 2, -65508, 65536, 2, 28, 65536, 2, 65564, 65536, 2, 131100, 65536, 2, 196636, 65536, 2, 262172, 65536, 2, -131043, 196608, 2, -65507, 196608, 2, 29, 196608, 2, 65565, 196608, 2, 131101, 196608, 2, 196637, 196608, 2, 262173, 196608, 2, -131042, 196608, 2, -65506, 196608, 2, 30, 196608, 2, 65566, 196608, 2, 131102, 196608, 2, 196638, 196608, 2, 262174, 196608, 2, -131041, 196608, 2, -131040, 196608, 2, -131039, 196608, 2, -131038, 196608, 2, -131037, 196608, 2, -131036, 196608, 2, -131035, 196608, 2, -131034, 196608, 2, -131033, 196608, 2, -131032, 196608, 2, -131031, 196608, 2, -131030, 196608, 2, -65494, 196608, 2, 196655, 196608, 2, 262191, 196608, 2, 327727, 196608, 2, 393263, 196608, 2, 458799, 196608, 2, 524335, 196608, 2, 589871, 196608, 2, 655407, 196608, 2, 720943, 196608, 2, 786479, 196608, 2, 852015, 196608, 2, 917551, 196608, 2, 983087, 196608, 2, 1048623, 196608, 2, 1114159, 196608, 2, 1179695, 196608, 2, 1245231, 196608, 2, 1310767, 196608, 2, 1376303, 196608, 2, 196656, 196608, 2, 262192, 196608, 2, 327728, 196608, 2, 393264, 196608, 2, 458800, 196608, 2, 524336, 196608, 2, 589872, 196608, 2, 655408, 196608, 2, 720944, 196608, 2, 786480, 196608, 2, 852016, 196608, 2, 917552, 196608, 2, 983088, 196608, 2, 1048624, 196608, 2, 1114160, 196608, 2, 1179696, 196608, 2, 1245232, 196608, 2, 1310768, 196608, 2, 1376304, 196608, 2, 1441840, 196608, 2, 196657, 196608, 2, 262193, 196608, 2, 327729, 196608, 2, 393265, 196608, 2, 458801, 196608, 2, 524337, 196608, 2, 589873, 196608, 2, 655409, 196608, 2, 720945, 196608, 2, 786481, 196608, 2, 852017, 196608, 2, 917553, 196608, 2, 983089, 196608, 2, 1048625, 196608, 2, 1114161, 196608, 2, 1179697, 196608, 2, 1245233, 196608, 2, 1310769, 196608, 2, 1376305, 196608, 2, 1441841, 196608, 2, 196658, 196608, 2, 262194, 196608, 2, 327730, 196608, 2, 393266, 196608, 2, 458802, 196608, 2, 524338, 196608, 2, 589874, 196608, 2, 655410, 196608, 2, 720946, 196608, 2, 786482, 196608, 2, 852018, 196608, 2, 917554, 196608, 2, 983090, 196608, 2, 1048626, 196608, 2, 1114162, 196608, 2, 1179698, 196608, 2, 1245234, 196608, 2, 1310770, 196608, 2, 1376306, 196608, 2, 1441842, 196608, 2, 196659, 196608, 2, 262195, 196608, 2, 327731, 196608, 2, 393267, 196608, 2, 458803, 196608, 2, 524339, 196608, 2, 589875, 196608, 2, 655411, 196608, 2, 720947, 196608, 2, 786483, 196608, 2, 852019, 196608, 2, 917555, 196608, 2, 983091, 196608, 2, 1048627, 196608, 2, 1114163, 196608, 2, 1179699, 196608, 2, 1245235, 196608, 2, 1310771, 196608, 2, 1376307, 196608, 2, 1441843, 196608, 2, 196660, 196608, 2, 262196, 196608, 2, 327732, 196608, 2, 393268, 196608, 2, 458804, 196608, 2, 524340, 196608, 2, 589876, 196608, 2, 655412, 196608, 2, 720948, 196608, 2, 786484, 196608, 2, 852020, 196608, 2, 917556, 196608, 2, 983092, 196608, 2, 1048628, 196608, 2, 1114164, 196608, 2, 1179700, 196608, 2, 1245236, 196608, 2, 1310772, 196608, 2, 1376308, 196608, 2, 1441844, 196608, 2, 196661, 196608, 2, 262197, 196608, 2, 327733, 196608, 2, 393269, 196608, 2, 458805, 196608, 2, 524341, 196608, 2, 589877, 196608, 2, 655413, 196608, 2, 720949, 196608, 2, 786485, 196608, 2, 852021, 196608, 2, 917557, 196608, 2, 983093, 196608, 2, 1048629, 196608, 2, 1114165, 196608, 2, 1179701, 196608, 2, 1245237, 196608, 2, 1310773, 196608, 2, 1376309, 196608, 2, 1441845, 196608, 2, 196662, 196608, 2, 262198, 196608, 2, 327734, 196608, 2, 393270, 196608, 2, 458806, 196608, 2, 524342, 196608, 2, 589878, 196608, 2, 655414, 196608, 2, 720950, 196608, 2, 786486, 196608, 2, 852022, 196608, 2, 917558, 196608, 2, 983094, 196608, 2, 1048630, 196608, 2, 1114166, 196608, 2, 1179702, 196608, 2, 1245238, 196608, 2, 1310774, 196608, 2, 1376310, 196608, 2, 1441846, 196608, 2, 196663, 196608, 2, 262199, 196608, 2, 327735, 196608, 2, 393271, 196608, 2, 458807, 196608, 2, 524343, 196608, 2, 589879, 196608, 2, 655415, 196608, 2, 720951, 196608, 2, 786487, 196608, 2, 852023, 196608, 2, 917559, 196608, 2, 983095, 196608, 2, 1048631, 196608, 2, 1114167, 196608, 2, 1179703, 196608, 2, 1245239, 196608, 2, 1310775, 196608, 2, 1376311, 196608, 2, 1441847, 196608, 2, 196664, 196608, 2, 262200, 196608, 2, 327736, 196608, 2, 393272, 196608, 2, 458808, 196608, 2, 524344, 196608, 2, 589880, 196608, 2, 655416, 196608, 2, 720952, 196608, 2, 786488, 196608, 2, 852024, 196608, 2, 917560, 196608, 2, 983096, 196608, 2, 1048632, 196608, 2, 1114168, 196608, 2, 1179704, 196608, 2, 1245240, 196608, 2, 1310776, 196608, 2, 1376312, 196608, 2, 1441848, 196608, 2, 196665, 196608, 2, 262201, 196608, 2, 327737, 196608, 2, 393273, 196608, 2, 458809, 196608, 2, 524345, 196608, 2, 589881, 196608, 2, 655417, 196608, 2, 720953, 196608, 2, 786489, 196608, 2, 852025, 196608, 2, 917561, 196608, 2, 983097, 196608, 2, 1048633, 196608, 2, 1114169, 196608, 2, 1179705, 196608, 2, 1245241, 196608, 2, 1310777, 196608, 2, 1376313, 196608, 2, 1441849, 196608, 2, 196666, 196608, 2, 262202, 196608, 2, 327738, 196608, 2, 393274, 196608, 2, 458810, 196608, 2, 524346, 196608, 2, 589882, 196608, 2, 655418, 196608, 2, 720954, 196608, 2, 786490, 196608, 2, 852026, 196608, 2, 917562, 196608, 2, 983098, 196608, 2, 1048634, 196608, 2, 1114170, 196608, 2, 1179706, 196608, 2, 1245242, 196608, 2, 1310778, 196608, 2, 1376314, 196608, 2, 1441850, 196608, 2, 196667, 196608, 2, 262203, 196608, 2, 327739, 196608, 2, 393275, 196608, 2, 458811, 196608, 2, 524347, 196608, 2, 589883, 196608, 2, 655419, 196608, 2, 720955, 196608, 2, 786491, 196608, 2, 852027, 196608, 2, 917563, 196608, 2, 983099, 196608, 2, 1048635, 196608, 2, 1114171, 196608, 2, 1179707, 196608, 2, 1245243, 196608, 2, 1310779, 196608, 2, 1376315, 196608, 2, 1441851, 196608, 2, 196668, 196608, 2, 262204, 196608, 2, 327740, 196608, 2, 393276, 196608, 2, 458812, 196608, 2, 524348, 196608, 2, 589884, 196608, 2, 655420, 196608, 2, 720956, 196608, 2, 786492, 196608, 2, 852028, 196608, 2, 917564, 196608, 2, 983100, 196608, 2, 1048636, 196608, 2, 1114172, 196608, 2, 1179708, 196608, 2, 1245244, 196608, 2, 1310780, 196608, 2, 1376316, 196608, 2, 1441852, 196608, 2, 196669, 196608, 2, 262205, 196608, 2, 327741, 196608, 2, 393277, 196608, 2, 458813, 196608, 2, 524349, 196608, 2, 589885, 196608, 2, 655421, 196608, 2, 720957, 196608, 2, 786493, 196608, 2, 852029, 196608, 2, 917565, 196608, 2, 983101, 196608, 2, 1048637, 196608, 2, 1114173, 196608, 2, 1179709, 196608, 2, 1245245, 196608, 2, 1310781, 196608, 2, 1376317, 196608, 2, 1441853, 196608, 2, 196670, 196608, 2, 262206, 196608, 2, 327742, 196608, 2, 393278, 196608, 2, 458814, 196608, 2, 524350, 196608, 2, 589886, 196608, 2, 655422, 196608, 2, 720958, 196608, 2, 786494, 196608, 2, 852030, 196608, 2, 917566, 196608, 2, 983102, 196608, 2, 1048638, 196608, 2, 1114174, 196608, 2, 1179710, 196608, 2, 1245246, 196608, 2, 1310782, 196608, 2, 1376318, 196608, 2, 1441854, 196608, 2, 196671, 196608, 2, 262207, 196608, 2, 327743, 196608, 2, 393279, 196608, 2, 458815, 196608, 2, 524351, 196608, 2, 589887, 196608, 2, 655423, 196608, 2, 720959, 196608, 2, 786495, 196608, 2, 852031, 196608, 2, 917567, 196608, 2, 983103, 196608, 2, 1048639, 196608, 2, 1114175, 196608, 2, 1179711, 196608, 2, 1245247, 196608, 2, 1310783, 196608, 2, 1376319, 196608, 2, 1441855, 196608, 2, -131029, 196608, 2, -65493, 196608, 2, -131028, 196608, 2, -65492, 196608, 2, -131027, 196608, 2, -65491, 196608, 2, -131026, 196608, 2, -65490, 196608, 2, -131025, 196608, 2, -65489, 196608, 2, -131024, 196608, 2, -65488, 196608, 2, 48, 196608, 2, 65584, 196608, 2, 131120, 196608, 2, -131023, 196608, 2, -65487, 196608, 2, 49, 196608, 2, 65585, 196608, 2, 131121, 196608, 2, -131022, 196608, 2, -65486, 196608, 2, 50, 196608, 2, 65586, 196608, 2, 131122, 196608, 2, -131021, 196608, 2, -65485, 196608, 2, 51, 196608, 2, 65587, 196608, 2, 131123, 196608, 2, -131020, 196608, 2, -65484, 196608, 2, 52, 196608, 2, 65588, 196608, 2, 131124, 196608, 2, -131019, 196608, 2, -65483, 196608, 2, 53, 196608, 2, 65589, 196608, 2, 131125, 196608, 2, -131018, 196608, 2, -65482, 196608, 2, 54, 196608, 2, 65590, 196608, 2, 131126, 196608, 2, -131017, 196608, 2, -65481, 196608, 2, 55, 196608, 2, 65591, 196608, 2, 131127, 196608, 2, -131016, 196608, 2, -65480, 196608, 2, 56, 196608, 2, 65592, 196608, 2, 131128, 196608, 2, -131015, 196608, 2, -65479, 196608, 2, 57, 196608, 2, 65593, 196608, 2, 131129, 196608, 2, -131014, 196608, 2, -65478, 196608, 2, 58, 196608, 2, 65594, 196608, 2, 131130, 196608, 2, -131013, 196608, 2, -65477, 196608, 2, 59, 196608, 2, 65595, 196608, 2, 131131, 196608, 2, -131012, 196608, 2, -65476, 196608, 2, 60, 196608, 2, 65596, 196608, 2, 131132, 196608, 2, -131011, 196608, 2, -65475, 196608, 2, 61, 196608, 2, 65597, 196608, 2, 131133, 196608, 2, -131010, 196608, 2, -65474, 196608, 2, 62, 196608, 2, 65598, 196608, 2, 131134, 196608, 2, -131009, 196608, 2, -65473, 196608, 2, 63, 196608, 2, 65599, 196608, 2, 131135, 196608, 2, -131008, 196608, 2, -65472, 196608, 2, 64, 196608, 2, 65600, 196608, 2, 131136, 196608, 2, 196672, 196608, 2, 262208, 196608, 2, 327744, 196608, 2, 393280, 196608, 2, -131007, 196608, 2, -65471, 196608, 2, 65, 196608, 2, 65601, 196608, 2, 131137, 196608, 2, 196673, 196608, 2, 262209, 196608, 2, 327745, 196608, 2, 393281, 196608, 2, -131006, 196608, 2, -65470, 196608, 2, 66, 196608, 2, 65602, 196608, 2, 131138, 196608, 2, 196674, 196608, 2, 262210, 196608, 2, 327746, 196608, 2, 393282, 196608, 2)

[node name="Pathfinder" type="Node2D" parent="." node_paths=PackedStringArray("tile_map")]
script = ExtResource("5_1s3py")
tile_map = NodePath("../TileMap")

[node name="Hound" parent="." node_paths=PackedStringArray("path_finder") instance=ExtResource("5_adc8o")]
position = Vector2(522, 156)
path_finder = NodePath("../Pathfinder")

[node name="AnimatedSprite2D" parent="Hound" index="0"]
material = SubResource("ShaderMaterial_hapga")

[node name="WanderState" parent="Hound/HoundStateMachine" index="1"]
wander_time_bottom = 0.1
wander_time_top = 0.1

[node name="CanvasModulate" type="CanvasModulate" parent="."]
color = Color(0.697993, 0.697993, 0.697993, 1)

[node name="FirstLevelDoor" parent="." instance=ExtResource("6_if2hv")]
position = Vector2(585, 148)

[node name="Hound2" parent="." node_paths=PackedStringArray("path_finder") instance=ExtResource("5_adc8o")]
position = Vector2(378, 170)
path_finder = NodePath("../Pathfinder")

[node name="ParallaxBackground" type="ParallaxBackground" parent="."]
scroll_base_offset = Vector2(-1500, 0)
scroll_base_scale = Vector2(2, 2)

[node name="CanvasModulate" type="CanvasModulate" parent="ParallaxBackground"]
color = Color(0.329158, 0.329158, 0.329158, 1)

[node name="ParallaxLayer" type="ParallaxLayer" parent="ParallaxBackground"]
motion_scale = Vector2(0.5, 0.5)

[node name="AnOrangeCity" type="Sprite2D" parent="ParallaxBackground/ParallaxLayer"]
texture_filter = 1
scale = Vector2(0.7275, 0.736)
texture = ExtResource("7_y5pi7")
centered = false

[editable path="Hound"]
